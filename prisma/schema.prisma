generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  access_token      String?
  refresh_token     String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String           @id @default(cuid())
  name           String?
  password       String? // for Credentials provider
  email          String?          @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  PinterestBoard PinterestBoard[]
  ScheduledPin   ScheduledPin[]
}

model PinterestBoard {
  id           String         @id @default(cuid())
  boardId      String
  name         String
  userId       String
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime       @default(now())
  ScheduledPin ScheduledPin[]

  @@unique([userId, boardId])
}

model ScheduledPin {
  id          String    @id @default(cuid())
  userId      String
  boardId     String
  title       String
  description String?
  imageUrl    String
  linkUrl     String?
  createdAt   DateTime  @default(now())
  scheduledAt DateTime
  status      PinStatus @default(PENDING)
  pinId       String?
  error       String?

  user  User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  board PinterestBoard @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

enum PinStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}
